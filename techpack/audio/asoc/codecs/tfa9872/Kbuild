# We can build either as part of a standalone Kernel build or as
# an external module.  Determine which mechanism is being used
ifeq ($(MODNAME),)
	KERNEL_BUILD := 1
else
	KERNEL_BUILD := 0
endif

ifeq ($(KERNEL_BUILD), 1)
	# These are configurable via Kconfig for kernel-based builds
	# Need to explicitly configure for Android-based builds
	AUDIO_BLD_DIR := $(shell pwd)/kernel/msm-4.14
	AUDIO_ROOT := $(AUDIO_BLD_DIR)/techpack/audio
endif

ifeq ($(KERNEL_BUILD), 0)
	# These are configurable via Kconfig for kernel-based builds
	# Need to explicitly configure for Android-based builds

	ifeq ($(CONFIG_ARCH_SDM670), y)
		include $(AUDIO_ROOT)/config/sdm670auto.conf
		export
		INCS    +=  -include $(AUDIO_ROOT)/config/sdm670autoconf.h
	endif

	ifeq ($(CONFIG_ARCH_SM8150), y)
		include $(AUDIO_ROOT)/config/sm8150auto.conf
		export
		INCS    +=  -include $(AUDIO_ROOT)/config/sm8150autoconf.h
	endif

	ifeq ($(CONFIG_ARCH_SDMSHRIKE), y)
		include $(AUDIO_ROOT)/config/sm8150auto.conf
		export
		INCS    +=  -include $(AUDIO_ROOT)/config/sm8150autoconf.h
	endif
endif

# additional debugging
#TFA_DEBUG=1
#

TFA_INC := $(AUDIO_ROOT)/asoc/codecs/tfa9872/inc

# add version number derived from Git
# ifeq ($(KDIR),)
# PLMA_HOSTSW_DIR=$(realpath -f $(srctree)/$(src))
# else
# PLMA_HOSTSW_DIR=$(realpath -f $(src))
# endif
# GIT_VERSION=$(shell cd $(PLMA_HOSTSW_DIR); git describe --tags --dirty --match "v[0-9]*.[0-9]*.[0-9]*")
# EXTRA_CFLAGS += -DTFA98XX_GIT_VERSIONS=\"$(GIT_VERSION)\"

# debugging support (also enables trace_printk)
EXTRA_CFLAGS += -DDEBUG -DTFA9874_NONDSP_STEREO

EXTRA_CFLAGS += -I$(TFA_INC)
# EXTRA_CFLAGS += -Werror

TFA9872_OBJS += tfa98xx.o
TFA9872_OBJS += tfa_container.o
TFA9872_OBJS += tfa_dsp.o
TFA9872_OBJS += tfa_init.o

ifdef TFA_DEBUG
EXTRA_CFLAGS += -DTFA_DEBUG -DDEBUG
snd-soc-tfa9872-objs += tfa_debug.o
endif

obj-$(CONFIG_SND_SOC_TFA9872) := snd-soc-tfa9872.o
snd-soc-tfa9872-y := $(TFA9872_OBJS)
